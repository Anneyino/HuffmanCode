根据要求，我们需要完成一个函数来输出哈夫曼编码，而这个哈夫曼编码是根据函数中的一个
参数——权值数组来生成的。根据哈夫曼编码的生成规律，我们知道，必须利用该权值数组先
构建一个哈夫曼树，再通过遍历过程，找到每个叶子结点的哈夫曼编码。而构建哈夫曼树，需要
每次找到权值最低的两个，新建一个结点的权值位这两个最低权值的和，并将这个新结点的左右
子结点指向这两个权值的结点。题中要求我们使用最小堆，来构建这个哈夫曼树，我们完成最小
堆的构建函数make_heap，插入函数InsertE，删除函数DeleteE，而make_heap又按要求通过反复
调用addjustDown函数来实现。思路逐渐清晰，首先完成对最小堆的编译，再在循环体中将权值数
组作为参数传入堆的构建函数，并记录首位置元素的值，删除该首元素，再次将权值数组传入堆
的构建函数，再次通过记录首元素的值来找到最小值，将两值相加构建一个新的权值，插入权值
数组，并把权值对应的结点联系起来，到此第一轮循环完毕，循环往复，直到Huffman树构建完毕
再通过递归遍历将Huffman树的叶子结点找到，并记录路径，从根结点开始，每向左进行一次操作
字符数组中加入‘0’；每向右访问一次，字符数组中加入‘1’。访问到叶子结点后输出叶子结点
对应的Huffman码以及其权值。

